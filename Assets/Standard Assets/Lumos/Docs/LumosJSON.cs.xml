<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LumosJSON</name>
    </assembly>
    <members>
        <member name="T:LumosJson">
            <summary>
            JSON encoder and decoder. Based on MiniJSON and others (see below).
            Spec. details, see http://www.json.org/
            JSON uses Arrays and Objects. These correspond here to the datatypes IList and IDictionary.
            All numbers are parsed to doubles.
            Based on work by Calvin Rien, who based it on work by Patrick van Bergen.
            http://techblog.procurios.nl/k/618/news/view/14605/14863/How-do-I-write-my-own-parser-for-JSON.html
            http://forum.unity3d.com/threads/35484-MiniJSON-script-for-parsing-JSON-data
            Permission is hereby granted, free of charge, to any person obtaining
            a copy of this software and associated documentation files (the
            "Software"), to deal in the Software without restriction, including
            without limitation the rights to use, copy, modify, merge, publish,
            distribute, sublicense, and/or sell copies of the Software, and to
            permit persons to whom the Software is furnished to do so, subject to
            the following conditions:
            The above copyright notice and this permission notice shall be
            included in all copies or substantial portions of the Software.
            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
            EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
            IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
            CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
            TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
            SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
            </summary>
        </member>
        <member name="F:LumosJson.lastErrorIndex">
            <summary>
            On decoding, this value holds the position at which the parse failed (-1 = no error).
            </summary>
        </member>
        <member name="M:LumosJson.Deserialize(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An List&lt;object&gt;, a Dictionary&lt;string, object&gt;, a double, a string, null, true, or false</returns>
        </member>
        <member name="M:LumosJson.Serialize(System.Object)">
            <summary>
            Converts a IDictionary / IList object or a simple type (string, int, etc.) into a JSON string
            </summary>
            <param name="json">A Dictionary&lt;string, object&gt; / List&lt;object&gt;</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="M:LumosJson.LastDecodeSuccessful">
            <summary>
            On decoding, this function returns the position at which the parse failed (-1 = no error).
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:LumosJson.GetLastErrorIndex">
            <summary>
            On decoding, this function returns the position at which the parse failed (-1 = no error).
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:LumosJson.GetLastErrorSnippet">
            <summary>
            If a decoding error occurred, this function returns a piece of the JSON string
            at which the error took place. To ease debugging.
            </summary>
            <returns>
            </returns>
        </member>
    </members>
</doc>
